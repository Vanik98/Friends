// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.friends.di;

import com.example.friends.di.module.MainModule;
import com.example.friends.mainactivty.MainScreenContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MainModule_ProvideMainPresenterFactory
    implements Factory<MainScreenContract.MainPresenter> {
  private final MainModule module;

  private final Provider<MainScreenContract.MainModel> mainModelProvider;

  public MainModule_ProvideMainPresenterFactory(
      MainModule module, Provider<MainScreenContract.MainModel> mainModelProvider) {
    assert module != null;
    this.module = module;
    assert mainModelProvider != null;
    this.mainModelProvider = mainModelProvider;
  }

  @Override
  public MainScreenContract.MainPresenter get() {
    return Preconditions.checkNotNull(
        module.provideMainPresenter(mainModelProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<MainScreenContract.MainPresenter> create(
      MainModule module, Provider<MainScreenContract.MainModel> mainModelProvider) {
    return new MainModule_ProvideMainPresenterFactory(module, mainModelProvider);
  }
}
